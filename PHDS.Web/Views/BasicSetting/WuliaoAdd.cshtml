@using PHDS.Web.Controllers
@model PHDS.Entities.Edmx.物料登记
@{
    var pinhua = new PHDS.Entities.Edmx.PinhuaEntities();
    var newitemJson = Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model, Newtonsoft.Json.Formatting.Indented));
    var itemtypes = pinhua.物料分类.AsNoTracking();
    var itemtypesJson = Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(itemtypes, Newtonsoft.Json.Formatting.Indented));
    var itemgroup = itemtypes.Where(x => x.级数 == 1).OrderBy(x => x.排序); ;
    var itemgroupJson = Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(itemgroup, Newtonsoft.Json.Formatting.Indented));
}
<div class="row">
    <div class="col-xs-12" id="formBox" v-cloak>
        <div class="my-sidebar">
            @Html.Partial("WuliaoNavi")
        </div>
        <div class="my-content">
            @using (Html.BeginForm<BasicSettingController>(p=>p.WuliaoAdd(), FormMethod.Post, new { id = "myForm" }))
            {
                <div class="box box-danger">
                    <div class="box-header with-border">
                        <h3 class="box-title">物料登记</h3>
                        <div class="box-tools pull-right">
                            <!-- Buttons, labels, and many other things can be placed here! -->

                        </div><!-- /.box-tools -->
                    </div><!-- /.box-header -->
                    <div class="box-body">
                        <div class="form-horizontal">
                            <div class="form-group">
                                <label class="control-label" v-bind:class="classFormHorizontal.formgroupLeft" for="编号">编号</label>
                                <div v-bind:class="classFormHorizontal.formgroupRight">
                                    <div class="input-group">
                                        <input type="text" class="form-control" @Html.Vue2().vModelFor(x => x.编号) v-bind:readonly="!isTrackingNoEditable">
                                        <div class="input-group-addon">
                                            <input type="checkbox" style="display: inline-block;margin-bottom: 2px; vertical-align:middle" v-bind:checked="isTrackingNoEditable" v-on:click="isTrackingNoEditable=!isTrackingNoEditable">
                                            <a href="javascript:;" v-on:click="isTrackingNoEditable=!isTrackingNoEditable"> 编辑</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label" v-bind:class="classFormHorizontal.formgroupLeft" for="分类编号">分类</label>
                                <div v-bind:class="classFormHorizontal.formgroupRight">
                                    <select class="form-control" @Html.Vue2().vModelFor(x => x.分类编号) v-on:change="fnType">
                                        <optgroup v-for="groupitem in 物料顶级分类" v-bind:label="groupitem.全称">
                                            <option v-for="item in innerTypes(groupitem.完整编码)" v-bind:value="item.完整编码">{{item.完整编码}} - {{item.全称}}</option>
                                        </optgroup>
                                    </select>
                                </div>
                                <input class="form-control" type="hidden" @Html.Vue2().vModelFor(x => x.类型) readonly />
                            </div>
                            <div class="form-group">
                                <label class="control-label" v-bind:class="classFormHorizontal.formgroupLeft" for="描述">描述</label>
                                <div v-bind:class="classFormHorizontal.formgroupRight">
                                    <input type="text" class="form-control" @Html.Vue2().vModelFor(x => x.描述) placeholder="输入描述...">
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label" v-bind:class="classFormHorizontal.formgroupLeft" for="规格">规格</label>
                                <div v-bind:class="classFormHorizontal.formgroupRight">
                                    <div class="input-group">
                                        <input type="text" class="form-control" @Html.Vue2().vModelFor(x => x.规格) placeholder="输入规格..." v-bind:readonly="isReadOnly" v-bind:value="fnSpec()">
                                        <div class="input-group-addon">
                                            <input type="checkbox" style="display: inline-block;margin-bottom: 2px; vertical-align:middle" v-bind:checked="!isReadOnly" v-on:click="isReadOnly=!isReadOnly">
                                            <a href="javascript:;" v-on:click="isReadOnly=!isReadOnly"> 编辑</a>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="control-label" v-bind:class="classFormHorizontal.formgroupLeft" for="Length">长</label>
                                <div v-bind:class="classFormHorizontal.formgroupRight">
                                    <div class="input-group">
                                        <input type="number" class="form-control" @Html.Vue2().vModelFor(x => x.Length) placeholder="输入长...">
                                        <div class="input-group-btn">
                                            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" tabindex="-1"> <span class="caret"></span></button>
                                            <ul class="dropdown-menu dropdown-menu-right">
                                                <li v-on:click="fnLengthClick"><a href="javascript:;">450</a></li>
                                                <li role="separator" class="divider"></li>
                                                <li v-on:click="fnLengthClick"><a href="javascript:;">300</a></li>
                                                <li v-on:click="fnLengthClick"><a href="javascript:;">500</a></li>
                                                <li v-on:click="fnLengthClick"><a href="javascript:;">600</a></li>
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label" v-bind:class="classFormHorizontal.formgroupLeft" for="Width">宽</label>
                                <div v-bind:class="classFormHorizontal.formgroupRight">
                                    <div class="input-group">
                                        <input type="number" class="form-control" @Html.Vue2().vModelFor(x => x.Width) placeholder="输入宽...">
                                        <div class="input-group-btn">
                                            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" tabindex="-1"> <span class="caret"></span></button>
                                            <ul class="dropdown-menu dropdown-menu-right">
                                                <li v-on:click="fnWidthClick"><a href="javascript:;">450</a></li>
                                                <li role="separator" class="divider"></li>
                                                <li v-on:click="fnWidthClick"><a href="javascript:;">300</a></li>
                                                <li v-on:click="fnWidthClick"><a href="javascript:;">500</a></li>
                                                <li v-on:click="fnWidthClick"><a href="javascript:;">600</a></li>
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label" v-bind:class="classFormHorizontal.formgroupLeft" for="Height">高</label>
                                <div v-bind:class="classFormHorizontal.formgroupRight">
                                    <div class="input-group">
                                        <input type="number" class="form-control" @Html.Vue2().vModelFor(x => x.Height) placeholder="输入高...">
                                        <div class="input-group-btn">
                                            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" tabindex="-1"> <span class="caret"></span></button>
                                            <ul class="dropdown-menu dropdown-menu-right">
                                                <li v-on:click="fnHeightClick"><a href="javascript:;">15</a></li>
                                                <li role="separator" class="divider"></li>
                                                <li v-on:click="fnHeightClick"><a href="javascript:;">12</a></li>
                                                <li v-on:click="fnHeightClick"><a href="javascript:;">18</a></li>
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label" v-bind:class="classFormHorizontal.formgroupLeft" for="面皮厚度">面皮</label>
                                <div v-bind:class="classFormHorizontal.formgroupRight">
                                    <div class="input-group">
                                        <input type="number" class="form-control" @Html.Vue2().vModelFor(x => x.面皮厚度) placeholder="输入面皮厚度...">
                                        <div class="input-group-btn">
                                            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" tabindex="-1"> <span class="caret"></span></button>
                                            <ul class="dropdown-menu dropdown-menu-right">
                                                <li v-on:click="fnThicknessClick"><a href="javascript:;">1.2</a></li>
                                                <li role="separator" class="divider"></li>
                                                <li v-on:click="fnThicknessClick"><a href="javascript:;">2</a></li>
                                                <li v-on:click="fnThicknessClick"><a href="javascript:;">3</a></li>
                                                <li v-on:click="fnThicknessClick"><a href="javascript:;">4</a></li>
                                                <li v-on:click="fnThicknessClick"><a href="javascript:;">0.6</a></li>
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="box-footer">
                        <div class="row no-print">
                            <div class="col-xs-12">
                                <a href="invoice-print.html" target="_blank" class="btn btn-default"><i class="fa fa-print"></i> 打印</a>
                                <a href="javascript:$('#myForm').submit()" class="btn btn-primary pull-right">
                                    <i class="fa fa-check"></i> 确认提交
                                </a>
                                <a href="@Url.Action("Wuliao")" class="btn btn-danger pull-right" style="margin-right: 5px;">
                                    <i class="fa fa-reply"></i> 取消
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section scripts{
    <script>
        var vm = new Vue({
            el: '#formBox',
            data: {
                @Html.Vue2().modelName: @newitemJson,
                物料顶级分类: @itemgroupJson,
                物料所有分类: @itemtypesJson,
                isReadOnly: true,
                isTrackingNoEditable: false,

                classFormHorizontal:{
                    formgroupLeft:{
                        'col-xs-3': true,
                        'col-sm-3': true,
                        'col-md-2': true,
                        'col-lg-2': true,
                    },
                    formgroupRight:{
                        'col-xs-9' :true,
                        'col-sm-9': true,
                        'col-md-8': true,
                        'col-lg-5': true,
                    },
                },
                boxCollapse :{
                    screenWidth: document.body.clientWidth,
                    collapseWidth: 768,
                    isLocked: false,
                },
            },
            mounted:function(){
                if(window.innerWidth < this.boxCollapse.collapseWidth){
                    $('.my-sidebar>.box').addClass("collapsed-box")
                    $(".my-sidebar .fa-minus").removeClass("fa-minus").addClass("fa-plus")
                    $(".my-sidebar .box-body").hide()
                }
                
                $(window).on("resize",this.resizeHandler)
            },
            computed: {

            },
            methods: {
                resizeHandler: function(){
                    if(!this.boxCollapse.isLocked){
                        this.boxCollapse.isLocked = true
                        setTimeout(function(){
                            var oldWidth = this.boxCollapse.screenWidth
                            var newWidth = document.body.clientWidth
                            this.boxCollapse.screenWidth = newWidth
                            console.log("window.innerWidth",window.innerWidth,"document.body.clientWidth",document.body.clientWidth)

                            if(newWidth < this.boxCollapse.collapseWidth){
                                $('.my-sidebar>.box').addClass("collapsed-box")
                                $(".my-sidebar .fa-minus").removeClass("fa-minus").addClass("fa-plus")
                                //$(".my-sidebar .box-body").css("display","none")
                                $(".my-sidebar .box-body").hide()
                            }
                            else if(oldWidth<this.boxCollapse.collapseWidth && newWidth>=this.boxCollapse.collapseWidth) {
                                $('.my-sidebar>.collapsed-box').removeClass("collapsed-box")
                                $(".my-sidebar .fa-plus").removeClass("fa-plus").addClass("fa-minus")
                                //$(".my-sidebar .box-body").css("display","block")
                                $(".my-sidebar .box-body").show()
                            }
                            this.boxCollapse.isLocked = false
                        }.bind(this),250)
                    }
                },
                innerTypes:function(key){
                    var array = $.grep(this.物料所有分类, function(item){
                        return item.完整编码 != key && item.完整编码.indexOf(key) >= 0
                    })
                    return array
                },
                fnType: function(){
                    var array = this.物料所有分类.filter(function(member){
                        return member.完整编码 == this.mvcModel.分类编号
                    },this)
                    @Html.Vue2().modelDataFor(x=>x.类型) = array.length>0 ? array[0].全称 :  ""
                },
                fnSpec: function(){
                    var length = @Html.Vue2().modelDataFor(x => x.Length);
                    var width = @Html.Vue2().modelDataFor(x => x.Width);
                    var height = @Html.Vue2().modelDataFor(x => x.Height);
                    if(this.isReadOnly){
                        if(length && width && height){
                            @Html.Vue2().modelDataFor(x=>x.规格) = [length,"*",width,"*",height].join("")
                        }
                        else
                            @Html.Vue2().modelDataFor(x=>x.规格) = ""
                    }
                },
                fnLengthClick: function (event) {
                    // `event` 是原生 DOM 事件
                    @Html.Vue2().modelDataFor(x=>x.Length) = event.target.innerText;
                },
                fnWidthClick: function (event) {
                    // `event` 是原生 DOM 事件
                    @Html.Vue2().modelDataFor(x=>x.Width) = event.target.innerText;
                },
                fnHeightClick: function (event) {
                    // `event` 是原生 DOM 事件
                    @Html.Vue2().modelDataFor(x=>x.Height) = event.target.innerText;
                },
                fnThicknessClick: function (event) {
                    // `event` 是原生 DOM 事件
                    @Html.Vue2().modelDataFor(x=>x.面皮厚度) = event.target.innerText;
                }
            },
        })

    </script>
}