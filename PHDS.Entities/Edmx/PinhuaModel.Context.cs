//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace PHDS.Entities.Edmx
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PinhuaEntities : DbContext
    {
        public PinhuaEntities()
            : base("name=PinhuaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<人员档案> 人员档案 { get; set; }
        public virtual DbSet<考勤卡号变动> 考勤卡号变动 { get; set; }
        public virtual DbSet<打卡登记> 打卡登记 { get; set; }
        public virtual DbSet<ES_Tmp> ES_Tmp { get; set; }
        public virtual DbSet<ES_RepCase> ES_RepCase { get; set; }
        public virtual DbSet<发货_DETAIL> 发货_DETAIL { get; set; }
        public virtual DbSet<往来单位> 往来单位 { get; set; }
        public virtual DbSet<物料登记> 物料登记 { get; set; }
        public virtual DbSet<业务类型> 业务类型 { get; set; }
        public virtual DbSet<对账结算_主表> 对账结算_主表 { get; set; }
        public virtual DbSet<收款单> 收款单 { get; set; }
        public virtual DbSet<收货> 收货 { get; set; }
        public virtual DbSet<收货_D> 收货_D { get; set; }
        public virtual DbSet<付款单> 付款单 { get; set; }
        public virtual DbSet<考勤期间> 考勤期间 { get; set; }
        public virtual DbSet<发货> 发货 { get; set; }
        public virtual DbSet<考勤明细> 考勤明细 { get; set; }
        public virtual DbSet<view_发货_汇总_销售与加工> view_发货_汇总_销售与加工 { get; set; }
        public virtual DbSet<物料分类> 物料分类 { get; set; }
    
        public virtual ObjectResult<GetNewId_s_Result> GetNewId_s(Nullable<int> idName, Nullable<int> n)
        {
            var idNameParameter = idName.HasValue ?
                new ObjectParameter("idName", idName) :
                new ObjectParameter("idName", typeof(int));
    
            var nParameter = n.HasValue ?
                new ObjectParameter("n", n) :
                new ObjectParameter("n", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNewId_s_Result>("GetNewId_s", idNameParameter, nParameter);
        }
    }
}
